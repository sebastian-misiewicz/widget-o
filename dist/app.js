function edit(){var scope=angular.element($("#"+current)).scope();if(!current)throw new Error("Element id doesn't exist");scope.edit(current)}function manage(){var scope=angular.element($("#"+currentManage)).scope();if(!currentManage)throw new Error("Element id doesn't exist");scope.edit(currentManage)}widgeto=angular.module("widget-o",["ngResource","ngSanitize","ui.sortable","blueimp.fileupload","pascalprecht.translate"]),widgeto.config(function($translateProvider){$translateProvider.translations("en",enTranslations),$translateProvider.translations("pl",plTranslations),$translateProvider.preferredLanguage("pl")}),widgeto.controller("EditBooleanController",function($scope,WidgetManager){$scope.id="",$scope.value="",$scope.set=function(id){return console.log("Setting widget id to: "+id),$scope.id=id,$scope.value=WidgetManager.getScope(id),!0}}),widgeto.run(function(WidgetManager){WidgetManager.add("edit-boolean","bower_components/widget-o/html/edit-boolean.html")}),widgeto.controller("EditImageController",function($scope,$http,WidgetManager){$scope.id="",$scope.value="",$scope.files=[],$scope.set=function(id){return console.log("Setting widget id to: "+id),$scope.id=id,$scope.value=WidgetManager.getScope(id),$http.get("rest/file/image").then(function(response){$scope.files=response.data.files||[]}),!0}}),widgeto.run(function(WidgetManager){WidgetManager.add("edit-src","bower_components/widget-o/html/edit-image.html")}),widgeto.controller("EditLinkController",function($scope,WidgetManager,Page){$scope.id="",$scope.value="",$scope.hrefs=[],$scope.set=function(id){return console.log("Setting widget id to: "+id),$scope.id=id,$scope.value=WidgetManager.getScope(id),!0},$scope.$watch("value.type",function(){switch($scope.hrefs=[],$scope.value.type){case"section":var sections=$("section").toArray();for(var section in sections){var id=$(sections[section]).attr("id");$scope.hrefs.push("#"+id)}break;case"internal":Page.query({},function(pages){pages.forEach(function(page){page.idsite&&$scope.hrefs.push(page.idsite)})})}})}),widgeto.run(function(WidgetManager){WidgetManager.add("edit-link","bower_components/widget-o/html/edit-link.html")}),widgeto.controller("EditOrderController",function($scope,$rootScope,WidgetManager){$scope.id="",$scope.value="",$scope.widgets=WidgetManager.getAll(),$scope.sample={id:"",widgetName:""},$scope.set=function(id){return console.log("Setting widget id to: "+id),$scope.id=id,$scope.value=WidgetManager.getScope(id),!0},$scope.sortableOptions={axis:"y"},$scope.reRender=function(){$rootScope.$broadcast("rerender-widgets",$scope.id)},$scope.remove=function(element){var index=$scope.value.elements.indexOf(element);index>-1&&$scope.value.elements.splice(index,1)},$scope.add=function(){var widget=WidgetManager.getWidget($scope.sample.widgetName);if(widget&&widget.sampleJson){var element=JSON.parse(JSON.stringify(widget.sampleJson));element.id=$scope.id+"-"+$scope.sample.id,$scope.value.elements.push(element)}}}),widgeto.run(function(WidgetManager){WidgetManager.add("edit-elements","bower_components/widget-o/html/edit-order.html")}),widgeto.controller("EditTextController",function($scope,WidgetManager){$scope.id="",$scope.value="",$scope.set=function(id){return console.log("Setting widget id to: "+id),$scope.id=id,$scope.value=WidgetManager.getScope(id),!0}}),widgeto.run(function(WidgetManager){WidgetManager.add("edit-text","bower_components/widget-o/html/edit-text.html")}),widgeto.controller("EditTextareaController",function($scope,WidgetManager){$scope.id="",$scope.value="",$scope.set=function(id){return console.log("Setting widget id to: "+id),$scope.id=id,$scope.value=WidgetManager.getScope(id),!0},$scope.sortableOptions={axis:"y"},$scope.addTag=function(tag){$scope.value.textarea.push({tag:tag}),$scope.value.textarea.push({tag:tag+"-close"})},$scope.addText=function(){$scope.value.textarea.push({text:"Some text"})},$scope.remove=function(element){var index=$scope.value.textarea.indexOf(element);index>-1&&$scope.value.textarea.splice(index,1)}}),widgeto.run(function(WidgetManager){WidgetManager.add("edit-textarea","bower_components/widget-o/html/edit-textarea.html")}),widgeto.controller("MainController",function($scope,$rootScope,$compile,$http,TemplateManager,WidgetManager,PageCache,Page){function getElement(id){if(console.log("Getting an element with ID "+id),$scope.page[id])return console.log("Found parent element for edit: "+id),$scope.page[id];for(var parent in $scope.page){var elements=$scope.page[parent].elements;if(elements)for(var i in elements)if(elements[i].id===id)return console.log("Found child element for edit: "+id),elements[i]}}$http.defaults.headers.common["auth-token"]=Cookies.get("auth-token"),TemplateManager.loadAll(),$scope.idpage=PageCache.getIdPage(),$scope.edit=function(id,type){$rootScope.$broadcast("modal-open",id,getElement(id)),$("#modal-edit").modal("show")},$scope.startEdit=function(){console.log("Starting the edit mode"),$rootScope.$broadcast("start-edit")},$rootScope.$on("login-success",function(){inEdit=!0}),$rootScope.$on("logout",function(){$http.post("rest/logout/").then(function(){Cookies.remove("auth-token"),window.location=$scope.idpage})}),$rootScope.$on("page-save",function(){Page.update({id:$scope.idpage},{html:$("html").html(),data:$scope.page},function(){$rootScope.$broadcast("modal-alert-popup","success","Page saved","Page "+$scope.idpage+" saved succesfully.")},function(e){$rootScope.$broadcast("modal-alert-open","danger","Save failed",e.status)})}),$rootScope.$on("page-reset",function(){Page.get({id:$scope.idpage},function(page){$scope.page=page},function(){$rootScope.$broadcast("modal-alert-open","danger","Page get failed","Failed to get the page: "+$scope.idpage)})}),$rootScope.$on("templates-loaded",function(event,id){Page.get({id:$scope.idpage},function(page){$scope.page||($scope.page=page)},function(){$rootScope.$broadcast("modal-alert-open","danger","Templates load fail","Failed to get the page "+$scope.idpage)}),console.log("Compiling "+id),$compile($(id).contents())($scope),console.log("Compiled "+id),$rootScope.$broadcast("compiled",id)}),$scope.toText=function(elements){var text="";for(var i in elements){var element=elements[i];if(element.tag)switch(element.tag){case"p":text+="<p>";break;case"p-close":text+="</p>";break;case"b":text+="<b>";break;case"b-close":text+="</b>";break;case"i":text+="<i>";break;case"i-close":text+="</i>"}else text+=element.text}return text},$scope.widgets=[],$rootScope.$on("rerender-widgets",function(event,id){console.log("Caught rerender-widgets of id: "+id),$scope.renderWidgets(id,!0)}),$scope.renderWidgets=function(parent,force){if(!$scope.page)return!1;var elements=$scope.page[parent].elements;if(!elements)return!1;if($scope.widgets[parent]&&!force)return!0;$scope.widgets[parent]=!0,console.log($("#"+parent)),$("#"+parent).html(""),console.log("Appending widgets for parent "+parent);for(var index in elements){var element=elements[index];console.log("Appending widget "+element.id),WidgetManager.addScope(element.id,element),$("#"+parent).append(WidgetManager.get(element.widget).replace("[[ID]]",element.id))}return $compile($("#"+parent).contents())($scope),!1},$scope.$watch("widgets",function(){console.log("Widgets CHANGED")})});var current,currentManage,inEdit=!0;$("body").on("mouseenter",".widget-o-editable",function(e){inEdit&&($(this).popover({content:'<button type="button" style="z-index: 999" class="btn btn-default" onclick="edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>',trigger:"manual",html:!0,template:'<div class="popover" style="z-index: 999" onmouseover="clearTimeout(timeoutObj);$(this).mouseleave(function() {$(this).hide();});"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'}),$(".modal-dialog").draggable({handle:".modal-header"}),current=e.currentTarget.id,$(this).popover("show"))}),$("body").on("mouseleave",".widget-o-editable",function(){if(inEdit){var ref=$(this);timeoutObj=setTimeout(function(){ref.popover("hide")},50)}}),$("body").on("mouseenter",".widget-o-managable",function(e){inEdit&&($(this).popover({content:'<button type="button" style="z-index: 999" class="btn btn-default" onclick="manage()"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Manage</button>',trigger:"manual",html:!0,placement:"bottom",template:'<div class="popover" style="z-index: 999" onmouseover="clearTimeout(timeoutObj);$(this).mouseleave(function() {$(this).hide();});"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'}),currentManage=e.currentTarget.id,$(this).popover("show"))}),$("body").on("mouseleave",".widget-o-managable",function(){if(inEdit){var ref=$(this);timeoutObj=setTimeout(function(){ref.popover("hide")},50)}}),widgeto.controller("ModalAddNewPageController",function($scope,$rootScope,Template,Page){$scope.saveFailed=!1,$scope.saveSucceeded=!1,$scope.value={idsite:"",template:""},$rootScope.$on("modal-add-new-page-open",function(){$scope.templates=Template.query(),$("#modal-add-new-page").modal("show")}),$scope.save=function(){Page.save($scope.value,function(){$scope.saveFailed=!1,$scope.saveSucceeded=!0},function(){$scope.saveSucceeded=!1,$scope.saveFailed=!0})}}),widgeto.run(function(TemplateManager){TemplateManager.add("modal-add-new-page","bower_components/widget-o/html/modal-add-new-page.html","body")}),widgeto.controller("ModalAlertController",function($scope,$rootScope){function setScope(type,title,message){switch($scope.type=type,$scope.title=title,console.log(message),message){case 403:$scope.message="403 - Forbidden - Log in first.";break;case 404:$scope.message="403 - Page Not Found.";break;default:$scope.message=message}}$rootScope.$on("modal-alert-open",function(event,type,title,message){setScope(type,title,message),$("#modal-alert").modal("show")}),$rootScope.$on("modal-alert-popup",function(event,type,title,message){setScope(type,title,message),$("#modal-alert").modal("show"),setTimeout(function(){$("#modal-alert").modal("hide")},1500)})}),widgeto.run(function(TemplateManager){TemplateManager.add("#modal-alert","bower_components/widget-o/html/modal-alert.html","body")}),widgeto.controller("ModalEditController",function($scope,$rootScope,$compile,WidgetManager){function render(){var value=$scope.value,modalBody=$("#modal-edit-body");modalBody.html("");for(var i in value){var element=value[i];if(appendEditWidget(modalBody,$scope.id,i,value),null!==element&&"object"==typeof element)for(var item in element)appendEditWidget(modalBody,i,item,element)}$compile(modalBody.contents())($scope)}function appendEditWidget(modalBody,id,editType,elementToEdit){var template=WidgetManager.get("edit-"+editType);template&&(WidgetManager.addScope(id,elementToEdit),modalBody.append(template.replace("[[ID]]",id)))}$scope.id="",$scope.value=null,$rootScope.$on("modal-open",function(event,id,value){console.log("modal-edit-opened"),$scope.$apply(function(){$scope.id=id,$scope.value=value,render()})})}),widgeto.run(function(TemplateManager){TemplateManager.add("#modal-edit","bower_components/widget-o/html/modal-edit.html","body","#modal-edit-body")}),widgeto.controller("ModalFileManagerController",function($scope,$rootScope,$http){function fileRemovedSuccess(response,file){if(response.data[file.name]){var index=$scope.files.indexOf(file);index>-1&&$scope.files.splice(index,1)}else fileRemovedFailed(file)}function fileRemovedFailed(file){file.error="Error"}$scope.value={idsite:"",template:""},$scope.files=[],$rootScope.$on("modal-file-manager-open",function(){$http.get("rest/file").then(function(response){$scope.files=response.data.files||[]}),$("#modal-file-manager").modal("show")}),$scope["delete"]=function(file){$http["delete"]("rest/file",{params:{"files[]":file.name}}).then(function(response){fileRemovedSuccess(response,file)},function(){fileRemovedFailed(file)})}}),widgeto.run(function(TemplateManager){TemplateManager.add("modal-file-manager","bower_components/widget-o/html/modal-file-manager.html","body")}),widgeto.controller("ModalFileUploadController",function($scope,$rootScope){$scope.value={idsite:"",template:""},$scope.options={url:"rest/file"},$rootScope.$on("modal-file-upload-open",function(){$("#modal-file-upload").modal("show")}),$scope.$watch("queue",function(){console.log($scope)})}),widgeto.run(function(TemplateManager){TemplateManager.add("modal-file-upload","bower_components/widget-o/html/modal-file-upload.html","body")}),widgeto.controller("ModalLoginController",function($scope,$rootScope,$http){$scope.loginFailed=!1,$scope.login=function(){$http.defaults.headers.common["auth-token"]='{"username":"'+$scope.username+'", "password":"'+$scope.password+'"}',$http.post("rest/login/",{}).success(function(){$scope.loginFailed=!1,$("#modal-login").modal("hide"),$rootScope.$broadcast("login-success")}).error(function(){$scope.loginFailed=!0})},$rootScope.$on("start-edit",function(){$("#modal-login").modal("show")})}),widgeto.run(function(TemplateManager){TemplateManager.add("modal-login","bower_components/widget-o/html/modal-login.html","body")}),widgeto.controller("ToolboxController",function($scope,$rootScope){$scope.isVisible=!1,$scope.show=function(){$scope.isVisible=!0},$scope.hide=function(){$scope.isVisible=!1},$scope.save=function(){$rootScope.$broadcast("page-save")},$scope.render=function(){$rootScope.$broadcast("page-render")},$scope.reset=function(){$rootScope.$broadcast("page-reset")},$scope.logout=function(){$rootScope.$broadcast("logout")},$scope.addNew=function(){$rootScope.$broadcast("modal-add-new-page-open")},$scope.fileUpload=function(){$rootScope.$broadcast("modal-file-upload-open")},$scope.fileManager=function(){$rootScope.$broadcast("modal-file-manager-open")},$scope.toggleWidgets=function(){$(".widget-o-editable, .widget-o-managable").each(function(){$(this).hasClass("widget-o-toggle")?$(this).removeClass("widget-o-toggle"):$(this).addClass("widget-o-toggle")})}}),widgeto.run(function(TemplateManager){TemplateManager.add("toolbox","bower_components/widget-o/html/toolbox.html","body")}),widgeto.factory("Page",function($resource){return $resource("rest/page/:id",null,{update:{method:"PUT"}})}),widgeto.factory("Render",function($resource){return $resource("rest/render/:id",null,{update:{method:"PUT"}})}),widgeto.factory("Template",function($resource){return $resource("rest/template/:id")});var enTranslations={CURRENT_PAGE:"Current page",SAVE:"Save",TOGGLE_WIDGETS:"Toggle widgets",REVERT_CHANGES:"Revert changes",FILES:"Files",UPLOAD:"Upload",MANAGER:"Manager",PAGES:"Pages",ADD_NEW:"Add new",LOGOUT:"Logout",DELETE:"Delete",IMAGE:"Image",WIDTH:"Width",SOURCE:"Source",EDITING:"Editing",ADD:"Add",APPLY_CHANGES:"Apply changes",ORDER_OF:"Order of",ENTER_UNIQUE_ID:"Enter an id (unique)",CLOSE:"Close",FILE:{UPLOAD:"File upload",ADD:"Add files...",UPLOAD_START:"Start upload",UPLOAD_CANCEL:"Cancel upload",MANAGER:"File manager",NO_FILES:"No files"}},plTranslations={CURRENT_PAGE:"Obecna strona",SAVE:"Zapisz",TOGGLE_WIDGETS:"Pokaż widgety",REVERT_CHANGES:"Cofnij zmiany",FILES:"Pliki",UPLOAD:"Wczytaj",MANAGER:"Manager",PAGES:"Strony",ADD_NEW:"Dodaj nową",LOGOUT:"Wyloguj",DELETE:"Skasuj",IMAGE:"Obraz",WIDTH:"Długość",SOURCE:"Źródło",EDITING:"Edycja",ADD:"Dodaj",APPLY_CHANGES:"Zatwierdź zmiany",ORDER_OF:"Kolejność",ENTER_UNIQUE_ID:"Wprowadź unikalne ID",CLOSE:"Zamknij",FILE:{UPLOAD:"Wczytytywanie plików",ADD:"Dodaj pliki...",UPLOAD_START:"Zacznij",UPLOAD_CANCEL:"Zaniechaj",MANAGER:"Manager plików",NO_FILES:"Brak plików"}};widgeto.service("PageCache",function(){this.setIdPage=function(idpage){this.idpage=idpage},this.getIdPage=function(){return this.idpage},this.setPage=function(page){this.page=page},this.getPage=function(){return this.page}}),widgeto.service("TemplateManager",function($rootScope,$sce,$templateRequest,$compile){var templates={id:"body",append:"body",elements:[]},count=[],templateManager=this;this.add=function(id,templateFilePath,position,append){"body"===position?templates.elements.push({id:id,path:templateFilePath,append:append,elements:[]}):templates.elements.forEach(function(element){element.id===position&&element.elements.push({id:id,append:append,path:templateFilePath})})},this.loadAll=function(){this.loadLevel(templates)},this.loadLevel=function(element){count[element.id]=element.elements?element.elements.length:0,console.log("Loading level "+element.id+" of elements "+count[element.id]),element.elements&&element.elements.forEach(function(template){templateManager.load(element,template.path)})},this.load=function(element,templateFilePath){var templateUrl=$sce.getTrustedResourceUrl(templateFilePath);$templateRequest(templateUrl).then(function(template){if(console.log("Adding template "+templateFilePath+" at position: "+element.append),console.log(element.append),$(element.append).append(template),count[element.id]--,console.log(count[element.id]),0===count[element.id]){if($rootScope.$broadcast("templates-loaded",element.id),!element.elements)return;element.elements.forEach(function(template){templateManager.loadLevel(template)})}},function(){$rootScope.$broadcast("modal-alert-open","danger","Loading a template failed","Failed to load: "+templateUrl)})}}),widgeto.service("WidgetManager",function($sce,$templateRequest){var widgets=[],scopes=[];this.addScope=function(id,scope){scopes[id]=scope},this.getScope=function(id){return scopes[id]},this.add=function(name,templatePath,sampleJson){var templateUrl=$sce.getTrustedResourceUrl(templatePath);$templateRequest(templateUrl).then(function(template){console.log("Loaded widget: "+name),widgets.push({name:name,template:template,sampleJson:sampleJson})},function(){console.log("Failed to load widget: "+name)})},this.get=function(name){for(var index in widgets)if(widgets[index].name===name)return widgets[index].template;return""},this.getWidget=function(name){for(var index in widgets)if(widgets[index].name===name)return widgets[index];return""},this.getAll=function(){var widgetNames=[];for(var index in widgets){var widget=widgets[index];widget.sampleJson&&widgetNames.push(widgets[index].name)}return widgetNames}}),angular.module("templates-dist",["../html/edit-boolean.html","../html/edit-image.html","../html/edit-link.html","../html/edit-order.html","../html/edit-text.html","../html/edit-textarea.html","../html/modal-add-new-page.html","../html/modal-alert.html","../html/modal-edit.html","../html/modal-file-manager.html","../html/modal-file-upload.html","../html/modal-login.html","../html/toolbox.html"]),angular.module("../html/edit-boolean.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/edit-boolean.html",'<div id="edit-boolean-{{id}}"\n     class="panel panel-primary"\n     ng-controller="EditBooleanController"\n     ng-init="set(\'[[ID]]\')">\n    <div class="row">\n        <div class="col-md-1">\n            <input type="checkbox" \n                   class="form-control" \n                   id="edit-boolean-checkbox" \n                   ng-model="value.boolean">\n        </div>\n        <div class="col-lg-1" style="line-height: 43px;">\n            {{id}}\n        </div>\n    </div>\n</div>')}]),angular.module("../html/edit-image.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/edit-image.html",'<div id="edit-image-{{id}}"\n     class="panel panel-primary" \n     ng-controller="EditImageController" \n     ng-init="set(\'[[ID]]\')">\n    <div class="panel-heading">{{id}} - {{ \'IMAGE\' | translate }}</div>\n    <div class="panel-body">\n        <div class="form-group">\n            <select class="form-control" ng-model="value.src">\n                <option ng-repeat="file in files" value="{{file.url}}">{{file.name}}</option>\n            </select>\n            <div class="input-group">\n                <span class="input-group-addon" id="basic-addon1">{{ \'SOURCE\' | translate }}</span>\n                <input type="text" class="form-control" placeholder="Username" aria-describedby="basic-addon1" \n                       ng-model="value.src" \n                       disabled="disabled">\n            </div>\n            <div class="input-group">\n                <span class="input-group-addon" id="basic-addon1">{{ \'IMAGE\' | translate }}</span>\n                <input type="text" class="form-control" placeholder="Width of image" aria-describedby="basic-addon1" \n                       ng-model="value.width">\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("../html/edit-link.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/edit-link.html",'<div id="edit-image-{{id}}"\n     class="panel panel-primary"\n     ng-controller="EditLinkController"\n     ng-init="set(\'[[ID]]\')">\n    <div class="panel-heading">{{id}} - Link</div>\n    <div class="panel-body">\n        <div class="radio">\n            <label>\n                <input type="radio" name="optionsRadios" id="optionsRadios1" ng-model="value.type" value="section" checked>\n                Section\n            </label>\n        </div>\n        <div class="radio">\n            <label>\n                <input type="radio" name="optionsRadios" id="optionsRadios1" ng-model="value.type" value="internal">\n                Internal\n            </label>\n        </div>\n        <div class="radio">\n            <label>\n                <input type="radio" name="optionsRadios" id="optionsRadios1" ng-model="value.type" value="external">\n                External\n            </label>\n        </div>\n        <div class="form-group">\n            <select class="form-control" ng-model="value.href" ng-show="value.type !== \'external\'">\n                <option ng-repeat="href in hrefs">{{href}}</option>\n            </select>\n            <input type="text" class="form-control" id="value" placeholder="Href of {{id}}" \n                   ng-model="value.href" ng-show="value.type === \'external\'">\n        </div>\n    </div>\n</div>')}]),angular.module("../html/edit-order.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/edit-order.html",'<div id="edit-text-{{id}}"\n     class="panel panel-primary" \n     ng-controller="EditOrderController" \n     ng-init="set(\'[[ID]]\')">\n    <div class="panel-heading">{{ \'ORDER_OF\' | translate }} {{id}}</div>\n    <div class="panel-body">\n        <ul style="list-style-type: none; padding: 0;"\n            ui-sortable="sortableOptions" \n            ng-model="value.elements">\n            <li ng-repeat="element in value.elements">\n                <h4>{{element.id}}\n                    <span class="label label-danger" \n                          style="cursor: pointer;" \n                          ng-click="remove(element)">\n                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>\n                    </span>\n                </h4>\n            </li>\n        </ul>\n        <hr>\n        <div class="input-group">\n            <span class="input-group-addon">ID</span>\n            <input type="text" class="form-control" placeholder="{{ \'ENTER_UNIQUE_ID\' | translate }}" ng-model="sample.id">\n        </div>\n        <div class="input-group">\n            <span class="input-group-addon">Widget</span>\n            <select class="form-control"\n                    ng-model="sample.widgetName">\n                <option ng-repeat="widget in widgets">{{widget}}</option>\n            </select>\n        </div>\n        <button type="button" class="btn btn-default" ng-click="add()">{{ \'ADD\' | translate }}</button>\n        <hr>\n        <button type="button" class="btn btn-default" ng-click="reRender()">{{ \'APPLY_CHANGES\' | translate }}</button>\n    </div>\n</div>')}]),angular.module("../html/edit-text.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/edit-text.html",'<div id="edit-text-{{id}}"\n     class="panel panel-primary" \n     ng-controller="EditTextController"\n     ng-init="set(\'[[ID]]\')">\n    <div class="panel-heading">{{id}}</div>\n    <div class="panel-body">\n        <div class="form-group">\n            <input type="text" class="form-control" id="value" placeholder="Value of {{id}}" ng-model="value.text">\n        </div>\n    </div>\n</div>')}]),angular.module("../html/edit-textarea.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/edit-textarea.html",'<div id="edit-textarea-{{id}}"\n     class="panel panel-primary" \n     ng-controller="EditTextareaController" \n     ng-init="set(\'[[ID]]\')">\n    <div class="panel-heading">Textarea</div>\n    <div class="panel-body">\n        <div class="panel panel-default">\n            <div class="panel-body">\n                <span class="label label-primary" \n                      style="cursor: pointer;" \n                      ng-click="addTag(\'p\')">Paragraph</span>\n                <span class="label label-success"\n                      style="cursor: pointer;" \n                      ng-click="addTag(\'b\')">Bold</span>\n                <span class="label label-success"\n                      style="cursor: pointer;" \n                      ng-click="addTag(\'i\')">Italic</span>\n                <span class="label label-default" \n                      style="cursor: pointer;" \n                      ng-click="addText()">Text</span>\n            </div>\n        </div>\n\n        <ul style="list-style-type: none; padding: 0;"\n            ui-sortable="sortableOptions" \n            ng-model="value.textarea">\n            <li ng-repeat="element in value.textarea" style="margin-bottom: 2px;">\n                <span class="label label-primary" \n                      ng-show="element.tag === \'p\'">Paragraph</span>\n                <span class="label label-primary" \n                      ng-show="element.tag === \'p-close\'">Close Paragraph</span>\n                <span class="label label-success" \n                      ng-show="element.tag === \'b\'">Bold</span>\n                <span class="label label-success" \n                      ng-show="element.tag === \'b-close\'">Close Bold</span>\n                <span class="label label-success" \n                      ng-show="element.tag === \'i\'">Italic</span>\n                <span class="label label-success" \n                      ng-show="element.tag === \'i-close\'">Close Italic</span>\n                <span class="label label-danger" \n                      style="cursor: pointer;" \n                      ng-click="remove(element)"\n                      ng-show="element.tag !== undefined">\n                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>\n                </span>\n                \n                <div class="input-group" ng-show="element.text !== undefined">\n                    <span class="input-group-addon">\n                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>\n                    </span>\n                    <input type="text" class="form-control" \n                           ng-model="element.text"\n                           ng-trim="false" />\n                    <span class="input-group-addon" \n                          style="cursor: pointer;"\n                          ng-click="remove(element)">\n                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>\n                    </span>\n                </div>\n\n            </li>\n        </ul>\n    </div>\n</div>')}]),angular.module("../html/modal-add-new-page.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/modal-add-new-page.html",'<div class="modal fade" id="modal-add-new-page" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\n     ng-controller="ModalAddNewPageController">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                <h4 class="modal-title" id="myModalLabel">Add new page</h4>\n            </div>\n            <div class="modal-body">\n                <div class="alert alert-warning" role="alert" ng-show="saveFailed">Save failed. Try again.</div>\n                <div class="alert alert-success" role="alert" ng-show="saveSucceeded">Save success. Go to new page <a class="btn btn-primary" href="{{value.idsite}}.html" role="button">{{value.idsite}}.html</a></div>\n                <div class="form-group">\n                    <input type="text" class="form-control" id="idsite" placeholder="Alias" ng-model="value.idsite">\n                    <select class="form-control" ng-model="value.template">\n                        <option ng-repeat="template in templates">{{template}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-default" data-dismiss="modal">{{ \'CLOSE\' | translate }}</button>\n                <button type="button" class="btn btn-primary" ng-click="save()">Save changes</button>\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("../html/modal-alert.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/modal-alert.html",'<div class="modal fade" id="modal-alert" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\n     ng-controller="ModalAlertController">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                <h4 class="modal-title" id="myModalLabel">{{title}}</h4>\n            </div>\n            <div class="modal-body" id="modal-edit-body">\n                <div class="alert alert-success" role="alert" ng-show="type === \'success\'">{{message}}</div>\n                <div class="alert alert-info" role="alert" ng-show="type === \'info\'">{{message}}</div>\n                <div class="alert alert-warning" role="alert" ng-show="type === \'warning\'">{{message}}</div>\n                <div class="alert alert-danger" role="alert" ng-show="type === \'danger\'">{{message}}</div>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("../html/modal-edit.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/modal-edit.html",'<div class="modal fade" id="modal-edit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\n     ng-controller="ModalEditController">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                <h4 class="modal-title" id="myModalLabel">{{ \'EDITING\' | translate }}: {{id}}</h4>\n            </div>\n            <div class="modal-body" id="modal-edit-body">\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-default" data-dismiss="modal">{{ \'CLOSE\' | translate }}</button>\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("../html/modal-file-manager.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/modal-file-manager.html",'<div class="modal fade" id="modal-file-manager" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\n     data-ng-controller="ModalFileManagerController">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                <h4 class="modal-title" id="myModalLabel">{{ \'FILE.MANAGER\' | translate }}</h4>\n            </div>\n            <div class="modal-body">\n                <div class="panel panel-default" ng-show="files.length === 0">\n                    <div class="panel-body">\n                        {{ \'FILE.NO_FILES\' | translate }}\n                    </div>\n                </div>\n                <table class="table table-striped files ng-cloak">\n                    <tr data-ng-repeat="file in files" data-ng-class="{\'processing\': file.$processing()}">\n                        <td data-ng-switch data-on="!!file.thumbnailUrl">\n                            <div class="preview" data-ng-switch-when="true">\n                                <a data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}" data-gallery><img data-ng-src="{{file.thumbnailUrl}}" alt=""></a>\n                            </div>\n                            <div class="preview" data-ng-switch-default data-file-upload-preview="file"></div>\n                        </td>\n                        <td>\n                            <p class="name" data-ng-switch data-on="!!file.url">\n                                <span data-ng-switch-when="true" data-ng-switch data-on="!!file.thumbnailUrl">\n                                    <a data-ng-switch-when="true" data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}" data-gallery>{{file.name}}</a>\n                                    <a data-ng-switch-default data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}">{{file.name}}</a>\n                                </span>\n                                <span data-ng-switch-default>{{file.name}}</span>\n                            </p>\n                            <strong data-ng-show="file.error" class="error text-danger">{{file.error}}</strong>\n                        </td>\n                        <td>\n                            <p class="size">{{file.size| formatFileSize}}</p>\n                        </td>\n                        <td>\n                            <button type="button" class="btn btn-danger destroy" data-ng-click="delete(file)">\n                                <i class="glyphicon glyphicon-trash"></i>\n                                <span>{{ \'DELETE\' | translate }}</span>\n                            </button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>');
}]),angular.module("../html/modal-file-upload.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/modal-file-upload.html",'<div class="modal fade" id="modal-file-upload" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\n     data-ng-controller="ModalFileUploadController">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                <h4 class="modal-title" id="myModalLabel">{{ \'FILE.UPLOAD\' | translate }}</h4>\n            </div>\n            <div class="modal-body">\n                <form id="fileupload" action="//action/" method="POST" enctype="multipart/form-data" \n                      data-file-upload="options" \n                      data-ng-class="{\'fileupload-processing\': processing() || loadingFiles}">\n                    <!-- Redirect browsers with JavaScript disabled to the origin page -->\n                    <noscript><input type="hidden" name="redirect" value="https://blueimp.github.io/jQuery-File-Upload/"></noscript>\n                    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->\n                    <div class="row fileupload-buttonbar">\n                        <div class="col-lg-9">\n                            <!-- The fileinput-button span is used to style the file input field as button -->\n                            <span class="btn btn-success fileinput-button" ng-class="{disabled: disabled}">\n                                <i class="glyphicon glyphicon-plus"></i>\n                                <span>{{ \'FILE.ADD\' | translate }}</span>\n                                <input type="file" name="files[]" multiple ng-disabled="disabled">\n                            </span>\n                            <button type="button" class="btn btn-primary start" data-ng-click="submit()">\n                                <i class="glyphicon glyphicon-upload"></i>\n                                <span>{{ \'FILE.UPLOAD_START\' | translate }}</span>\n                            </button>\n                            <button type="button" class="btn btn-warning cancel" data-ng-click="cancel()">\n                                <i class="glyphicon glyphicon-ban-circle"></i>\n                                <span>{{ \'FILE.UPLOAD_CANCEL\' | translate }}</span>\n                            </button>\n                            <!-- The global file processing state -->\n                            <span class="fileupload-process"></span>\n                        </div>\n                        <!-- The global progress state -->\n                        <div class="col-lg-3 fade" data-ng-class="{in: active()}">\n                            <!-- The global progress bar -->\n                            <div class="progress progress-striped active" data-file-upload-progress="progress()"><div class="progress-bar progress-bar-success" data-ng-style="{width: num + \'%\'}"></div></div>\n                            <!-- The extended global progress state -->\n                            <div class="progress-extended">&nbsp;</div>\n                        </div>\n                    </div>\n                    <!-- The table listing the files available for upload/download -->\n                    <table class="table table-striped files ng-cloak">\n                        <tr data-ng-repeat="file in queue" data-ng-class="{\'processing\': file.$processing()}">\n                            <td data-ng-switch data-on="!!file.thumbnailUrl">\n                                <div class="preview" data-ng-switch-when="true">\n                                    <a data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}" data-gallery><img data-ng-src="{{file.thumbnailUrl}}" alt=""></a>\n                                </div>\n                                <div class="preview" data-ng-switch-default data-file-upload-preview="file"></div>\n                            </td>\n                            <td>\n                                <p class="name" data-ng-switch data-on="!!file.url">\n                                    <span data-ng-switch-when="true" data-ng-switch data-on="!!file.thumbnailUrl">\n                                        <a data-ng-switch-when="true" data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}" data-gallery>{{file.name}}</a>\n                                        <a data-ng-switch-default data-ng-href="{{file.url}}" title="{{file.name}}" download="{{file.name}}">{{file.name}}</a>\n                                    </span>\n                                    <span data-ng-switch-default>{{file.name}}</span>\n                                </p>\n                                <strong data-ng-show="file.error" class="error text-danger">{{file.error}}</strong>\n                            </td>\n                            <td>\n                                <p class="size">{{file.size| formatFileSize}}</p>\n                                <div class="progress progress-striped active fade" data-ng-class="{pending: \'in\'}[file.$state()]" data-file-upload-progress="file.$progress()"><div class="progress-bar progress-bar-success" data-ng-style="{width: num + \'%\'}"></div></div>\n                            </td>\n                            <td>\n                                <button type="button" class="btn btn-primary start" data-ng-click="file.$submit()" data-ng-hide="!file.$submit || options.autoUpload" data-ng-disabled="file.$state() == \'pending\' || file.$state() == \'rejected\'">\n                                    <i class="glyphicon glyphicon-upload"></i>\n                                    <span>Start</span>\n                                </button>\n                                <button type="button" class="btn btn-warning cancel" data-ng-click="file.$cancel()" data-ng-hide="!file.$cancel">\n                                    <i class="glyphicon glyphicon-ban-circle"></i>\n                                    <span>Cancel</span>\n                                </button>\n                                <button type="button" class="btn btn-danger destroy" data-ng-click="file.$destroy()" data-ng-hide="!file.$destroy">\n                                    <i class="glyphicon glyphicon-trash"></i>\n                                    <span>Delete</span>\n                                </button>\n                            </td>\n                        </tr>\n                    </table>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("../html/modal-login.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/modal-login.html",'<div class="modal fade" id="modal-login" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                <h4 class="modal-title" id="myModalLabel">Login</h4>\n            </div>\n            <div class="modal-body">\n                <div class="alert alert-warning" id="modal-login-alert" role="alert" style="display: none;">Login has failed. Try again.</div>\n                <div class="form-group">\n                    <input type="text" id="modal-login-username" class="form-control login-input" placeholder="Username">\n                </div>\n                <div class="form-group">\n                    <input type="password" id="modal-login-password" class="form-control login-input" placeholder="Password">\n                </div>\n            </div>\n            <div class="modal-footer">\n                <button type="submit" class="btn btn-primary" onclick="login()">Login</button>\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("../html/toolbox.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("../html/toolbox.html",'<div ng-controller="ToolboxController"\n     ng-mouseenter="show()"\n     ng-mouseleave="hide()"\n    style="position: fixed; top: 5px; left: 5px; z-index: 9999; display: block;">\n    <h1>\n        <span class="glyphicon glyphicon-flash" style="color: #ffffff; opacity: 0.3" ng-show="!isVisible"></span>\n    </h1>\n    <div class="btn-group-vertical" role="toolbar" ng-show="isVisible">\n        <div class="bg-info text-center">{{ \'CURRENT_PAGE\' | translate }}</div>\n        <button type="button" class="btn btn-default" ng-click="save()">{{ \'SAVE\' | translate }}</button>\n        <button type="button" class="btn btn-default" ng-click="toggleWidgets()">{{ \'TOGGLE_WIDGETS\' | translate }}</button>\n        <button type="button" class="btn btn-default" ng-click="reset()">{{ \'REVERT_CHANGES\' | translate }}</button>\n        <div class="bg-info text-center">{{ \'FILES\' | translate }}</div>\n        <button type="button" class="btn btn-default" ng-click="fileUpload()">{{ \'UPLOAD\' | translate }}</button>\n        <button type="button" class="btn btn-default" ng-click="fileManager()">{{ \'MANAGER\' | translate }}</button>\n        <div class="bg-info text-center">{{ \'PAGES\' | translate }}</div>\n        <button type="button" class="btn btn-default" ng-click="addNew()">{{ \'ADD_NEW\' | translate }}</button>\n        <button type="button" class="btn btn-default" ng-click="logout()">{{ \'LOGOUT\' | translate }}</button>\n    </div>\n</div>')}]);